# # name: deployment check
# # on: 
# #   push:
# #     branches:
# #       - main
# # jobs:
# #   build:
# #     runs-on: ubuntu-latest
# #     steps:
# #       - uses: actions/checkout@v2

# #       - uses: actions/setup-node@v2
# #         with: 
# #           node-version: '18'

# #       - run: yarn install
# #       - run: yarn build

#       # - uses: amondnet/vercel-action@v20
#       # - with:
#       #     vercel_token: ${{ secrets.VERCEL_TOKEN }}
#       #     vercel_org_id: ${{ secrets.ORG_ID }}
#       #     vercel_project_id: ${{ secrets.PROJECT_ID }}
#       #     github_commit_sha: ${{ github.sha }}
#   # deploy:
#   #   needs: build
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #     - name: startdeployment
#   #       uses: bobheadxi/deployment@1.4
      
#   #     - uses: actions/checkout@v2

#   #     - uses: amondnet/vercel-action@v20
#   #       with:
#   #         vercel-token: ${{ secrets.VERCEL_TOKEN }}
#   #         vercel-org-id: ${{ secrets.ORG_ID }}
#   #         vercel-project-id: ${{ secrets.PROJECT_ID }}
#   #         scope: ${{ secrets.ORG_ID }}
#   #         working-direction: ./
      
#   #     - name: update deployment
#   #       uses: bobheadxi/deployment@1.4
#   #       if: always()
#   #       with:
#   #         step: finish



# name: deployment check
# # env:
# #   vercel-token: ${{ secrets.VERCEL_TOKEN }}
# #   vercel-org-id: ${{ secrets.ORG_ID }}
# #   vercel-project-id: ${{ secrets.PROJECT_ID }}
# on: 
#   push:
#     branches:
#       - main
# jobs:
#   build-deploys:
#     runs-on: ubuntu-latest
#     steps:
#       - name: checkout code
#         uses: actions/checkout@v3
#       - name: Install dependencies
#         run: yarn install
#       - name: Build project
#         run: yarn build && yarn export
#       - name: deploy to vercel
#         uses: amondnet/vercel-action@v20
#         with:
#           vercel-token: ${{ secrets.VERCEL_TOKEN }}
#           vercel-org-id: ${{ secrets.ORG_ID }}
#           vercel-project-id: ${{ secrets.PROJECT_ID }}
#           build: false
#           entrypoint: .next/ || out/
#         # with:
#         #   vercel-token: ${{ secrets.VERCEL_TOKEN }}
#         #   vercel-org-id: ${{ secrets.ORG_ID }}
#         #   vercel-project-id: ${{ secrets.PROJECT_ID }}
#         #   args: deploy --prod --token ${{ secrets.VERCEL_TOKEN }} --confirm --scope ${{ secrets.ORG_ID }} --entry-point out/ || .next/

#       - name: Promote deployment to production
#         uses: amondnet/vercel-action@v20
#         with:
#           vercel-token: ${{ secrets.VERCEL_TOKEN }}
#           vercel-org-id: ${{ secrets.ORG_ID }}
#           vercel-project-id: ${{ secrets.PROJECT_ID }}
#           args: alias ${{ env.DEPLOYMENT_ID }} --prod
#         env:
#           DEPLOYMENT_ID: ${{ steps.deploy.outputs.vercel_deployment_id }}





# deploy to production 
# name: Vercel Production Deployment
# env:
#   VERCEL_ORG_ID: ${{ secrets.ORG_ID }}
#   VERCEL_PROJECT_ID: ${{ secrets.PROJECT_ID }}
# on:
#   push:
#     branches:
#       - main
# jobs:
#   Build-Production:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - name: Install Vercel CLI
#         run: npm install --global vercel@latest
#       - name: Pull Vercel Environment Information
#         run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
#       - name: Build Project Artifacts
#         run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
  # Deploy-Production:
  #   needs: Build-Production
  #   runs-on: ubuntu-latest
  #   steps:
      # - name: Deploy Project Artifacts to Vercel
      #   run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}


#  deploy to github pages 
# name: Github Production Deployment
name: github Production Deployment
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      # - name: Install Dependencies
      #   run: npm install
      # - name: Build
      #   run: npm run build
      # - name: Static HTML export with Next.js
      #   run: yarn export
      # - run: ls
      # - run : echo "able"
      # - name: Upload Artifact
      #   uses: actions/upload-pages-artifact@v1
      #   with:
      #     path: ./out
          # name: build-artifact
  # Deploy job
  # deploy:
  #   # Add a dependency to the build job
  #   needs: build
  #   permissions:
  #     contents: read
  #     pages: write
  #     id-token: write

  #   # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
  #   # Deploy to the github-pages environment
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}

  #   # Specify runner + deployment step
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v1
  #       with:
  #         folder: .
  #         token: ${{ secrets.GITHUB_TOKEN }}
          # artifact_name: build-artifact

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps: 
      -
        uses: actions/checkout@v3
        name: checkout
      - 
        name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          token: ${{ secrets.DOCKERHUB_TOKEN }}
      
      -
        name: Set up docker
        uses: docker/setup-buildx-action@v2
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/clockbox:latest


# Sample workflow for building and deploying a Next.js site to GitHub Pages
#
# To get started with Next.js see: https://nextjs.org/docs/getting-started
#
# name: Deploy Next.js site to Pages

# on:
  # Runs on pushes targeting the default branch
  # push:
  #   branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# permissions:
#   contents: read
#   pages: write
#   id-token: write

# Allow one concurrent deployment
# concurrency:
#   group: "pages"
#   cancel-in-progress: true

# jobs:
  # Build job
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Setup Node
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: "16"
      # - name: Setup Pages
      #   uses: actions/configure-pages@v3
      #   with:

      #     static_site_generator: next
      # - name: Install dependencies
      #   run: yarn install
      # - name: Build with Next.js
      #   run: yarn build
      # - name: Static HTML export with Next.js
      #   run: yarn export
      # - run: ls
      # - name: Upload artifact
      #   uses: actions/upload-pages-artifact@v1
      #   with:
      #     path: ./out

  # Deployment job
  # deploy:
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v1