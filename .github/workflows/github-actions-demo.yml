# # name: deployment check
# # on: 
# #   push:
# #     branches:
# #       - main
# # jobs:
# #   build:
# #     runs-on: ubuntu-latest
# #     steps:
# #       - uses: actions/checkout@v2

# #       - uses: actions/setup-node@v2
# #         with: 
# #           node-version: '18'

# #       - run: yarn install
# #       - run: yarn build

#       # - uses: amondnet/vercel-action@v20
#       # - with:
#       #     vercel_token: ${{ secrets.VERCEL_TOKEN }}
#       #     vercel_org_id: ${{ secrets.ORG_ID }}
#       #     vercel_project_id: ${{ secrets.PROJECT_ID }}
#       #     github_commit_sha: ${{ github.sha }}
#   # deploy:
#   #   needs: build
#   #   runs-on: ubuntu-latest
#   #   steps:
#   #     - name: startdeployment
#   #       uses: bobheadxi/deployment@1.4
      
#   #     - uses: actions/checkout@v2

#   #     - uses: amondnet/vercel-action@v20
#   #       with:
#   #         vercel-token: ${{ secrets.VERCEL_TOKEN }}
#   #         vercel-org-id: ${{ secrets.ORG_ID }}
#   #         vercel-project-id: ${{ secrets.PROJECT_ID }}
#   #         scope: ${{ secrets.ORG_ID }}
#   #         working-direction: ./
      
#   #     - name: update deployment
#   #       uses: bobheadxi/deployment@1.4
#   #       if: always()
#   #       with:
#   #         step: finish



# name: deployment check
# on: 
#   push:
#     branches:
#       - main
# jobs:
#   build-deploys:
#     runs-on: ubuntu-latest
#     steps:
#       - name: checkout code
#         uses: actions/checkout@v3
#       - name: Install dependencies
#         run: yarn install
#       - name: Build project
#         run: yarn build && yarn export
#       - name: deploy to vercel
#         uses: amondnet/vercel-action@v20
#         with:
#           vercel-token: ${{ secrets.VERCEL_TOKEN }}
#           vercel-org-id: ${{ secrets.ORG_ID }}
#           vercel-project-id: ${{ secrets.PROJECT_ID }}
#           build: false
#           entrypoint: .next/ || out/
#         # with:
#         #   vercel-token: ${{ secrets.VERCEL_TOKEN }}
#         #   vercel-org-id: ${{ secrets.ORG_ID }}
#         #   vercel-project-id: ${{ secrets.PROJECT_ID }}
#         #   args: deploy --prod --token ${{ secrets.VERCEL_TOKEN }} --confirm --scope ${{ secrets.ORG_ID }} --entry-point out/ || .next/

#       - name: Promote deployment to production
#         uses: amondnet/vercel-action@v20
#         with:
#           vercel-token: ${{ secrets.VERCEL_TOKEN }}
#           vercel-org-id: ${{ secrets.ORG_ID }}
#           vercel-project-id: ${{ secrets.PROJECT_ID }}
#           args: alias ${{ env.DEPLOYMENT_ID }} --prod
#         env:
#           DEPLOYMENT_ID: ${{ steps.deploy.outputs.vercel_deployment_id }}





# deploy to production 
name: Vercel Production Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.PROJECT_ID }}
on:
  push:
    branches:
      - main
jobs:
  Build-Production:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
  # Deploy-Production:
  #   needs: Build-Production
  #   runs-on: ubuntu-latest
  #   steps:
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}